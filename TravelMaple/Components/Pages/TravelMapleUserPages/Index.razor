@page "/travelmapleusers"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using TravelMaple.Domain
@using TravelMaple.Data
@implements IAsyncDisposable
@inject IDbContextFactory<TravelMaple.Data.TravelMapleContext> DbFactory

<PageTitle>Index</PageTitle>

<h1>Index</h1>

<p>
    <a href="travelmapleusers/create">Create New</a>
</p>

<QuickGrid Class="table" Items="context.TravelMapleUser">
    <PropertyColumn Property="travelmapleuser => travelmapleuser.FirstName" />
    <PropertyColumn Property="travelmapleuser => travelmapleuser.LastName" />
    <PropertyColumn Property="travelmapleuser => travelmapleuser.EmailAddress" />
    <PropertyColumn Property="travelmapleuser => travelmapleuser.DateCreated" />
    <PropertyColumn Property="travelmapleuser => travelmapleuser.DateUpdated" />
    <PropertyColumn Property="travelmapleuser => travelmapleuser.CreatedBy" />
    <PropertyColumn Property="travelmapleuser => travelmapleuser.UpdatedBy" />

    <TemplateColumn Context="travelmapleuser">
        <a href="@($"travelmapleusers/edit?id={travelmapleuser.Id}")">Edit</a> |
        <a href="@($"travelmapleusers/details?id={travelmapleuser.Id}")">Details</a> |
        <a href="@($"travelmapleusers/delete?id={travelmapleuser.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private TravelMapleContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
