@page "/trips/create"
@using Microsoft.EntityFrameworkCore
@using TravelMaple.Domain
@inject IDbContextFactory<TravelMaple.Data.TravelMapleContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Trip</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Trip" OnValidSubmit="AddTrip" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>      
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label>
                <InputText id="name" @bind-Value="Trip.Name" class="form-control" />
                <ValidationMessage For="() => Trip.Name" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="duration" class="form-label">Duration:</label>
                <InputNumber id="duration" @bind-Value="Trip.Duration" class="form-control" />
                <ValidationMessage For="() => Trip.Duration" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="destination" class="form-label">Destination:</label>
                <InputText id="destination" @bind-Value="Trip.Destination" class="form-control" />
                <ValidationMessage For="() => Trip.Destination" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="estbudget" class="form-label">Estimated Budget:</label>
                <InputNumber id="estbudget" @bind-Value="Trip.EstBudget" class="form-control" />
                <ValidationMessage For="() => Trip.EstBudget" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="startdate" class="form-label">Start Date:</label>
                <InputDate id="startdate" @bind-Value="Trip.StartDate" class="form-control" />
                <ValidationMessage For="() => Trip.StartDate" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="enddate" class="form-label">End Date:</label>
                <InputDate id="enddate" @bind-Value="Trip.EndDate" class="form-control" />
                <ValidationMessage For="() => Trip.EndDate" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="aim" class="form-label">Aim:</label>
                <InputSelect id="aim" @bind-Value="Trip.Aim" class="form-control" >
                    <option value="">Select the aim of your trip</option>
                    <option value="Relaxation">Relaxation</option>
                    <option value="Exploration">Exploration</option>
                    <option value="Adventure">Adventure</option>
                </InputSelect>
                <ValidationMessage For="() => Trip.Aim" class="text-danger" />
            </div> 

            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/trips">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Trip Trip { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddTrip()
    {
        using var context = DbFactory.CreateDbContext();
        context.Trip.Add(Trip);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/trips");
    }
}
